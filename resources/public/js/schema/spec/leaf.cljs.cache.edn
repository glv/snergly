;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name schema.spec.leaf, :imports nil, :requires {spec schema.spec.core, schema.spec.core schema.spec.core}, :uses nil, :defs {LeafSpec {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted schema.spec.core/CoreSpec cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name schema.spec.leaf/LeafSpec, :file "resources/public/js/schema/spec/leaf.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 9, :record true, :end-line 9, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->LeafSpec {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/resources/public/js/schema/spec/leaf.cljs", :line 9, :column 12, :end-line 9, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([pre]))}, :name schema.spec.leaf/->LeafSpec, :variadic false, :file "resources/public/js/schema/spec/leaf.cljs", :end-column 20, :method-params ([pre]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pre]))}, map->LeafSpec {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/resources/public/js/schema/spec/leaf.cljs", :line 9, :column 12, :end-line 9, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__18354]))}, :name schema.spec.leaf/map->LeafSpec, :variadic false, :file "resources/public/js/schema/spec/leaf.cljs", :end-column 20, :method-params ([G__18354]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18354]))}, leaf-spec {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/resources/public/js/schema/spec/leaf.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([pre])), :doc "A leaf spec represents an atomic datum that is checked completely\n   with a single precondition, and is otherwise a black box to Schema."}, :name schema.spec.leaf/leaf-spec, :variadic false, :file "resources/public/js/schema/spec/leaf.cljs", :end-column 16, :method-params ([pre]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pre])), :doc "A leaf spec represents an atomic datum that is checked completely\n   with a single precondition, and is otherwise a black box to Schema."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:pre pre}, :order [:pre pre]}, :doc nil}
;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name snergly.image, :imports nil, :requires {g snergly.grid, snergly.grid snergly.grid}, :uses nil, :defs {*optimize-drawing* {:name snergly.image/*optimize-drawing*, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 10, :column 1, :end-line 10, :end-column 24, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 10, :column 6, :end-line 10, :end-column 24}}, draw-cells-orig {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([{:keys [changed-cells], :as grid} cell-size draw-fn]))}, :name snergly.image/draw-cells-orig, :variadic false, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :end-column 22, :method-params ([p__24516 cell-size draw-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [changed-cells], :as grid} cell-size draw-fn]))}, draw-cells {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([{:keys [changed-cells], :as grid} cell-size draw-fn]))}, :name snergly.image/draw-cells, :variadic false, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :end-column 17, :method-params ([p__24565 cell-size draw-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [changed-cells], :as grid} cell-size draw-fn]))}, draw-cell-background {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 27, :column 7, :end-line 27, :end-column 27, :arglists (quote ([g cell cell-size x1 y1 _ _]))}, :name snergly.image/draw-cell-background, :variadic false, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :end-column 27, :method-params ([g cell cell-size x1 y1 _ _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 7, :fn-var true, :arglists (quote ([g cell cell-size x1 y1 _ _]))}, draw-line {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([g x1 y1 x2 y2]))}, :name snergly.image/draw-line, :variadic false, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :end-column 16, :method-params ([g x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 5, :fn-var true, :arglists (quote ([g x1 y1 x2 y2]))}, draw-cell-walls {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 39, :column 7, :end-line 39, :end-column 22, :arglists (quote ([g background wall cell _ x1 y1 x2 y2]))}, :name snergly.image/draw-cell-walls, :variadic false, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :end-column 22, :method-params ([g background wall cell _ x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 9, :fn-var true, :arglists (quote ([g background wall cell _ x1 y1 x2 y2]))}, image-grid {:protocol-inline nil, :meta {:file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :line 49, :column 7, :end-line 49, :end-column 17, :arglists (quote ([g {:keys [rows columns], :as grid} cell-size]))}, :name snergly.image/image-grid, :variadic false, :file "/Users/glv/Projects/snergly/src/snergly/image.cljs", :end-column 17, :method-params ([g p__24612 cell-size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 3, :fn-var true, :arglists (quote ([g {:keys [rows columns], :as grid} cell-size]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:color :west :south :changed-cells :columns :east :rows :north}, :order [:changed-cells :color :north :west :east :south :rows :columns]}, :doc nil}